load_module modules/ngx_http_js_module.so;

worker_processes auto; 
events {

}

http {
    js_import oauth2.js;
    # OAuth 2.0 Token Introspection configuration
    resolver 8.8.8.8;                  # For DNS lookup of OAuth server
    subrequest_output_buffer_size 16k; # To fit a complete response from OAuth server
    #error_log /var/log/nginx/error.log debug; # Enable to see introspection details

    #set $access_token $http_apikey; # Where to find the token. Remove when using Authorization header
    set $oauth_token_endpoint     "http://sampleapp.authentication/authentication/connect/introspect";
    #set $oauth_token_hint         "access_token"; # E.g. access_token, refresh_token
    set $oauth_client_id          "SampleApp.API"; # Will use HTTP Basic authentication unless empty
    set $oauth_client_secret      "apisecret"; # If id is empty this will be used as a bearer token
    
	upstream sampleapp.api {
		server sampleapp.api:80;
	}
	upstream sampleapp.authentication {
		server sampleapp.authentication:80;
	}
    
    map $http_authorization $access_token {
        "~*^bearer (.*)$" $1;
        default $http_authorization;
    }
    
    # This is where token introspection responses will be stored if proxy_cache is enabled
    proxy_cache_path /var/cache/nginx/tokens levels=1 keys_zone=token_responses:1m max_size=10m;

	server {
		listen 443 ssl;

		ssl_certificate     /etc/nginx/ssl/sampleapp.crt;
		ssl_certificate_key /etc/nginx/ssl/sampleapp.key;

        location /api {
                auth_request /_oauth2_token_introspection;
        
                # Any member of the token introspection response is available as $sent_http_token_member
                #auth_request_set $username $sent_http_token_username;
                #proxy_set_header X-Username $username;
        
                proxy_pass http://sampleapp.api;
        }

        location = /_oauth2_token_introspection {
                # This location implements an auth_request server that uses the JavaScript
                # module to perform the token introspection request.
                internal;
                js_content oauth2.introspectAccessToken;
        }
        
        location = /_oauth2_send_introspection_request {
                # This location is called by introspectAccessToken(). We use the proxy_
                # directives to construct an OAuth 2.0 token introspection request, as per:
                #  https://tools.ietf.org/html/rfc7662#section-2
                internal;
                gunzip on; # Decompress if necessary
        
                proxy_method      POST;
                proxy_set_header  Authorization $arg_authorization;
                proxy_set_header  Content-Type "application/x-www-form-urlencoded";
                proxy_set_body    "token=$access_token";
                proxy_pass        $oauth_token_endpoint;
        
                proxy_cache           token_responses; # Enable caching of token introspection responses
                proxy_cache_key       $access_token;   # Cache the response for each unique access token
                proxy_cache_lock      on;              # Don't allow simultaneous requests for same token
                proxy_cache_valid     200 10s;         # How long to use cached introspection responses
                proxy_cache_use_stale error timeout;   # Use old responses if we cannot reach the server
                proxy_ignore_headers  Cache-Control Expires Set-Cookie; # Cache even when receiving these
        }
        
# 		location /authentication {
# 			proxy_pass       http://sampleapp.authentication;
# 			proxy_redirect   off;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Host $server_name;
# 		}
# 
# 		location /api {
# 			proxy_pass       http://sampleapp.api;
# 			proxy_redirect   off;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Host $server_name;
# 		}
	}
}